ASAP2_VERSION 1 41
/begin PROJECT ACC_PC
	"Generated by ETAS from Project ACC_PC"
	/begin HEADER
		""
		VERSION "000" PROJECT_NO ASD
		/end HEADER
		/begin MODULE ACC_PC
		"Generated by ETAS ASCET7 from Project: ACC_PC"
		  /begin A2ML
		      block "IF_DATA" taggedunion if_data {
		      "E_TARGET" taggedstruct {
		       (block "SOURCE" struct {
		          char[100];
		          int;
		          long;
		          taggedstruct {
		             "QP_BLOB" uint;
		          };
		       }
		       )*;
		       block "TP_BLOB" struct {
		          ulong;
		          int;
		          int;
		          long;
		          long;
		       };
		       "KP_BLOB" struct {
		          ulong;
		          ulong;
		          uint;
		          struct {
		             long;
		             uint;
		          }
		          [64];
		       };
		       "DP_BLOB" struct {
		          ulong;
		          ulong;
		          uint;
		          struct {
		             long;
		             uint;
		          }
		          [64];
		       };
		      };
		  };
		  /end A2ML
		/begin IF_DATA E_TARGET
		    /begin SOURCE "Task0"
		        /* type   */ 3
		        /* period */ 10
		        QP_BLOB 1
		    /end SOURCE
		    /begin TP_BLOB
		         /* programm id */ 3833615802
		         /* target id   */ 7
		         /*             */ 0 2 0
		    /end TP_BLOB
		/end IF_DATA
		/begin MOD_PAR
		    ""
		    VERSION "000"
		    ADDR_EPK 0x0
		    EPK ""
		    SUPPLIER "ETAS GmbH"
		    CUSTOMER "xxx"
		    CUSTOMER_NO "000"
		    USER "xxx"
		    PHONE_NO "000"
		    ECU "PC"
		    CPU_TYPE "PCx86"
		    NO_OF_INTERFACES 1
		/end MOD_PAR
		/begin MOD_COMMON
		    "Common definitions"
		    BYTE_ORDER MSB_LAST
		    ALIGNMENT_BYTE 1
		    ALIGNMENT_WORD 2
		    ALIGNMENT_LONG 4
		    ALIGNMENT_FLOAT32_IEEE 4
		    ALIGNMENT_FLOAT64_IEEE 8 
		/end MOD_COMMON

		/begin CHARACTERISTIC components.Globals.acc_status_request
			/* long identifier    */ ""
			/* type               */ VALUE
			/* ecu address        */ 0x451034
			/* record layout      */ STANDARD_VALUE_U8
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ 0
			/* upper limit        */ 1
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 2
			/end IF_DATA
		/end CHARACTERISTIC

		/begin CHARACTERISTIC components.Stecke.BrakeMomentum
			/* long identifier    */ ""
			/* type               */ CURVE
			/* ecu address        */ 0x434038
			/* record layout      */ STANDARD_CURVE_R32R32
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			/begin AXIS_DESCR
				/* axis type          */ STD_AXIS
				/* input quantity     */ NO_INPUT_QUANTITY
				/* conversion         */ esdl_ident
				/* max axis point     */ 6
				/* lower limit        */ -3.4028234663852886E+38
				/* upper limit        */ 3.4028234663852886E+38
			/end AXIS_DESCR
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 4
			/end IF_DATA
		/end CHARACTERISTIC

		/begin CHARACTERISTIC components.Stecke.EngineMomentum
			/* long identifier    */ ""
			/* type               */ MAP
			/* ecu address        */ 0x43406C
			/* record layout      */ STANDARD_MAP_R32R32R32
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			/begin AXIS_DESCR
				/* axis type          */ STD_AXIS
				/* input quantity     */ NO_INPUT_QUANTITY
				/* conversion         */ esdl_ident
				/* max axis point     */ 6
				/* lower limit        */ -3.4028234663852886E+38
				/* upper limit        */ 3.4028234663852886E+38
			/end AXIS_DESCR
			/begin AXIS_DESCR
				/* axis type          */ STD_AXIS
				/* input quantity     */ NO_INPUT_QUANTITY
				/* conversion         */ esdl_ident
				/* max axis point     */ 6
				/* lower limit        */ -3.4028234663852886E+38
				/* upper limit        */ 3.4028234663852886E+38
			/end AXIS_DESCR
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 5
			/end IF_DATA
		/end CHARACTERISTIC

		/begin CHARACTERISTIC components.Stecke.AirFriction
			/* long identifier    */ ""
			/* type               */ CURVE
			/* ecu address        */ 0x434004
			/* record layout      */ STANDARD_CURVE_R32R32
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			/begin AXIS_DESCR
				/* axis type          */ STD_AXIS
				/* input quantity     */ NO_INPUT_QUANTITY
				/* conversion         */ esdl_ident
				/* max axis point     */ 6
				/* lower limit        */ -3.4028234663852886E+38
				/* upper limit        */ 3.4028234663852886E+38
			/end AXIS_DESCR
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 6
			/end IF_DATA
		/end CHARACTERISTIC

		/begin CHARACTERISTIC components.Stecke.Landscape
			/* long identifier    */ ""
			/* type               */ CURVE
			/* ecu address        */ 0x434130
			/* record layout      */ STANDARD_CURVE_R32R32
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			/begin AXIS_DESCR
				/* axis type          */ STD_AXIS
				/* input quantity     */ NO_INPUT_QUANTITY
				/* conversion         */ esdl_ident
				/* max axis point     */ 20
				/* lower limit        */ -3.4028234663852886E+38
				/* upper limit        */ 3.4028234663852886E+38
			/end AXIS_DESCR
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 8
			/end IF_DATA
		/end CHARACTERISTIC

		/begin CHARACTERISTIC components.Stecke.TrackSize
			/* long identifier    */ ""
			/* type               */ VALUE
			/* ecu address        */ 0x434000
			/* record layout      */ STANDARD_VALUE_R32
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 9
			/end IF_DATA
		/end CHARACTERISTIC

		/begin CHARACTERISTIC components.AccFeedback.c
			/* long identifier    */ ""
			/* type               */ VALUE
			/* ecu address        */ 0x45102C
			/* record layout      */ STANDARD_VALUE_R32
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 2 1000 0
			/end IF_DATA
		/end CHARACTERISTIC

		/begin MEASUREMENT components.Globals.acc_status
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x451035
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Globals.acc_feedback
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x451036
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Globals.v
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x451030
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 3
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Stecke.h
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x451040
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Stecke.s
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x451048
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Stecke.ds
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x45103C
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Stecke.momentum
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x451044
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 3
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Stecke.dh
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x451038
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 1 1000 7
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.AccFeedback.acc_status_old
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x451028
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 2 1000 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.AccFeedback.feedback
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x451029
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 2 1000 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.AccFeedback.duration
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x451024
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 2 1000 3
			/end IF_DATA
		/end MEASUREMENT

		/begin COMPU_METHOD esdl_ident
			/* long identifier    */ ""
			/* type               */ RAT_FUNC
			/* format             */ "%12.4"
			/* unit               */ ""
			/* coeffs             */ COEFFS 0 1 0 0 0 1
		/end COMPU_METHOD
		
		/begin FUNCTION ACC_PC
			""
			/begin SUB_FUNCTION
				components.Globals
				components.Stecke
				components.AccFeedback
				components.OnOff
			/end SUB_FUNCTION
		/end FUNCTION
		
		/begin FUNCTION components.Globals
			""
			/begin DEF_CHARACTERISTIC
				components.Globals.acc_status_request
			/end DEF_CHARACTERISTIC
			/begin LOC_MEASUREMENT
				components.Globals.acc_feedback
				components.Globals.acc_status
				components.Globals.v
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.Stecke
			""
			/begin DEF_CHARACTERISTIC
				components.Stecke.BrakeMomentum
				components.Stecke.EngineMomentum
				components.Stecke.AirFriction
				components.Stecke.Landscape
				components.Stecke.TrackSize
			/end DEF_CHARACTERISTIC
			/begin LOC_MEASUREMENT
				components.Stecke.dh
				components.Stecke.ds
				components.Stecke.h
				components.Stecke.momentum
				components.Stecke.s
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.AccFeedback
			""
			/begin DEF_CHARACTERISTIC
				components.AccFeedback.c
			/end DEF_CHARACTERISTIC
			/begin LOC_MEASUREMENT
				components.AccFeedback.acc_status_old
				components.AccFeedback.duration
				components.AccFeedback.feedback
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.OnOff
			""
		/end FUNCTION
		
		/begin RECORD_LAYOUT STANDARD_VALUE_U8
			/* value              */ FNC_VALUES 1 UBYTE COLUMN_DIR DIRECT
		/end RECORD_LAYOUT
		
		/begin RECORD_LAYOUT STANDARD_CURVE_R32R32
		/* axis size          */ NO_AXIS_PTS_X 1 UWORD
		/* axis               */ AXIS_PTS_X 2 FLOAT32_IEEE INDEX_INCR DIRECT
		/* value              */ FNC_VALUES 3 FLOAT32_IEEE COLUMN_DIR DIRECT
		/end RECORD_LAYOUT
		
		/begin RECORD_LAYOUT STANDARD_MAP_R32R32R32
			/* x axis size        */ NO_AXIS_PTS_X 1 UWORD
			/* y axis size        */ NO_AXIS_PTS_Y 2 UWORD
			/* x axis             */ AXIS_PTS_X 3 FLOAT32_IEEE INDEX_INCR DIRECT
			/* y axis             */ AXIS_PTS_Y 4 FLOAT32_IEEE INDEX_INCR DIRECT
			/* value              */ FNC_VALUES 5 FLOAT32_IEEE COLUMN_DIR DIRECT
		/end RECORD_LAYOUT
		
		/begin RECORD_LAYOUT STANDARD_VALUE_R32
			/* value              */ FNC_VALUES 1 FLOAT32_IEEE COLUMN_DIR DIRECT
		/end RECORD_LAYOUT
		
		/begin GROUP ACC_PC
			""
			ROOT
			/begin SUB_GROUP
				components.Globals
				components.Stecke
				components.AccFeedback
				components.OnOff
			/end SUB_GROUP
		/end GROUP
		
		/begin GROUP components.Globals
			""
			/begin REF_CHARACTERISTIC
				components.Globals.acc_status_request
			/end REF_CHARACTERISTIC
			/begin REF_MEASUREMENT
				components.Globals.acc_feedback
				components.Globals.acc_status
				components.Globals.v
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.Stecke
			""
			/begin REF_CHARACTERISTIC
				components.Stecke.BrakeMomentum
				components.Stecke.EngineMomentum
				components.Stecke.AirFriction
				components.Stecke.Landscape
				components.Stecke.TrackSize
			/end REF_CHARACTERISTIC
			/begin REF_MEASUREMENT
				components.Stecke.dh
				components.Stecke.ds
				components.Stecke.h
				components.Stecke.momentum
				components.Stecke.s
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.AccFeedback
			""
			/begin REF_CHARACTERISTIC
				components.AccFeedback.c
			/end REF_CHARACTERISTIC
			/begin REF_MEASUREMENT
				components.AccFeedback.acc_status_old
				components.AccFeedback.duration
				components.AccFeedback.feedback
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.OnOff
			""
		/end GROUP
		
	/end MODULE
/end PROJECT
