#include <STANDARD.H>

CPU rta_cpu {
	OS RTAOS {
		STATUS = EXTENDED;
		STARTUPHOOK = TRUE;
		SHUTDOWNHOOK = TRUE;
		ERRORHOOK = TRUE;
		PRETASKHOOK = FALSE;
		POSTTASKHOOK = FALSE;
		USEGETSERVICEID = TRUE;
		USEPARAMETERACCESS = TRUE;
		//RTAOILCFG OS_SETTING "AllowOSRestart" "true";
		//RTAOILCFG OS_VERSION "v5.00";
		//RTAOILCFG OS_TARGET "VirtualOsek";
		//RTAOILCFG TYPE = "MinGW";
		//RTAOILCFG OS_STC_COMPATIBLE FALSE;
		//RTAOILCFG OS_DISPATCH OS_COUNTED;
		//RTAOILCFG OS_DEFAULT_WEIGHT OS_HEAVY;
		//RTAOILCFG OS_STATIC_INTERFACE_DISABLED TRUE;




		//RTAOILCFG OS_SPEED 10000;
		//RTAOILCFG OS_TASK_STACK {OS_UNDEFINED};
		//RTAOILCFG OS_CAT1_STACK {OS_UNDEFINED};
		//RTAOILCFG OS_CAT2_STACK {OS_UNDEFINED};
		//RTAOILCFG OS_STOPWATCH_SPEED 1000;
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_STOPWATCH TRUE : "Auto created "; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_MAX_VALUE 4294967295; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT cycles; OS_UNIT_AMOUNT 10000.000000; OS_BASE_UNIT ticks; OS_BASE_AMOUNT 1000.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT stopwatch_ticks; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT ticks; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT s; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT ticks; OS_BASE_AMOUNT 1000000.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT ms; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT s; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT us; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT ms; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT ns; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT us; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_UNIT min; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT s; OS_BASE_AMOUNT 60.000000; };
		//RTAOILCFG OS_TIMEBASE sys_timebase { OS_CONST ticks_per_s; OS_FACTOR 1000000.000000; OS_UNITS ticks; OS_AS_FLOAT TRUE; }: "Auto created";
		//RTAOILCFG OS_TIMEBASE cpu_clock { OS_MAX_VALUE 4294967295; };
		//RTAOILCFG OS_TIMEBASE cpu_clock { OS_UNIT cycles; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT ticks; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE cpu_clock { OS_UNIT kCycles; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT cycles; OS_BASE_AMOUNT 1000.000000; };
		//RTAOILCFG OS_TIMEBASE cpu_clock { OS_UNIT MCycles; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT kCycles; OS_BASE_AMOUNT 1000.000000; };
		//RTAOILCFG OS_TIMEBASE cpu_clock { OS_UNIT StopwatchTicks; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT ticks; OS_BASE_AMOUNT 10000.000000; };
		//RTAOILCFG OS_TIMEBASE cpu_clock { OS_STOPWATCH_CONVERSION OS_STOPWATCH_CONVERSION_VALID TRUE;  "0.1 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS cycles; OS_STOPWATCH_AMOUNT 1.000000; OS_STOPWATCH_UNITS cycles; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_MAX_VALUE 4294967295; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_UNIT s; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT ticks; OS_BASE_AMOUNT 1000000.000000; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_UNIT min; OS_UNIT_AMOUNT 1.000000; OS_BASE_UNIT s; OS_BASE_AMOUNT 60.000000; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_UNIT ms; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT s; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_UNIT us; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT ms; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_UNIT ns; OS_UNIT_AMOUNT 1000.000000; OS_BASE_UNIT us; OS_BASE_AMOUNT 1.000000; };
		//RTAOILCFG OS_TIMEBASE real_time { OS_STOPWATCH_CONVERSION OS_STOPWATCH_CONVERSION_VALID TRUE;  "1000000 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS s; OS_STOPWATCH_AMOUNT 1000000.000000; OS_STOPWATCH_UNITS ticks; };
		//RTAOILCFG OS_TIMEBASE ts_etasCounter { OS_MAX_VALUE 4294967295; };
		//RTAOILCFG OS_TIMEBASE ts_etasCounter { OS_STOPWATCH_CONVERSION OS_STOPWATCH_CONVERSION_VALID TRUE;  "1 real time ms"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS ticks ; OS_STOPWATCH_AMOUNT 50000.000000; OS_STOPWATCH_UNITS ticks; };		 



		//RTAOILCFG OS_TIMING_CORRECTION STANDARD 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
		//RTAOILCFG OS_TIMING_CORRECTION EXTENDED 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
		//RTAOILCFG OS_TIMING_CORRECTION OS_TIMING 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
		//RTAOILCFG OS_INTERRUPT_RECOGNITION OS_UNDEFINED;
	};


	/***************************** application modes *************************/

	APPMODE OSDEFAULTAPPMODE {
		//RTAOILCFG { OS_STOPWATCH_CONVERSION cpu_clock OS_STOPWATCH_CONVERSION_VALID TRUE;  "0.0833333333333333 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS cycles; OS_STOPWATCH_AMOUNT 1.000000; OS_STOPWATCH_UNITS cycles; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION real_time OS_STOPWATCH_CONVERSION_VALID TRUE;  "50000000 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS s; OS_STOPWATCH_AMOUNT 50000000.000000; OS_STOPWATCH_UNITS ticks; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION ts_etasCounter OS_STOPWATCH_CONVERSION_VALID TRUE;  "1 real time ms"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS ticks ; OS_STOPWATCH_AMOUNT 50000.000000; OS_STOPWATCH_UNITS ticks; };
	};

	/* default ETAS application modes */

	APPMODE etasStartup {
		//RTAOILCFG { OS_STOPWATCH_CONVERSION cpu_clock OS_STOPWATCH_CONVERSION_VALID TRUE;  "0.0833333333333333 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS cycles; OS_STOPWATCH_AMOUNT 1.000000; OS_STOPWATCH_UNITS cycles; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION real_time OS_STOPWATCH_CONVERSION_VALID TRUE;  "50000000 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS s; OS_STOPWATCH_AMOUNT 50000000.000000; OS_STOPWATCH_UNITS ticks; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION ts_etasCounter OS_STOPWATCH_CONVERSION_VALID TRUE; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS ticks ; OS_STOPWATCH_AMOUNT 50000.000000; OS_STOPWATCH_UNITS ticks; };
	};

	APPMODE etasInactive {
		//RTAOILCFG { OS_STOPWATCH_CONVERSION cpu_clock OS_STOPWATCH_CONVERSION_VALID TRUE;  "0.0833333333333333 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS cycles; OS_STOPWATCH_AMOUNT 1.000000; OS_STOPWATCH_UNITS cycles; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION real_time OS_STOPWATCH_CONVERSION_VALID TRUE;  "50000000 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS s; OS_STOPWATCH_AMOUNT 50000000.000000; OS_STOPWATCH_UNITS ticks; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION ts_etasCounter OS_STOPWATCH_CONVERSION_VALID TRUE; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS ticks ; OS_STOPWATCH_AMOUNT 50000.000000; OS_STOPWATCH_UNITS ticks; };
	};

	/* user application modes */

	APPMODE UserAppMode {
		//RTAOILCFG { OS_STOPWATCH_CONVERSION cpu_clock OS_STOPWATCH_CONVERSION_VALID TRUE;  "0.0833333333333333 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS cycles; OS_STOPWATCH_AMOUNT 1.000000; OS_STOPWATCH_UNITS cycles; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION real_time OS_STOPWATCH_CONVERSION_VALID TRUE;  "50000000 sys_timebase ticks"; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS s; OS_STOPWATCH_AMOUNT 50000000.000000; OS_STOPWATCH_UNITS ticks; };
		//RTAOILCFG { OS_STOPWATCH_CONVERSION ts_etasCounter OS_STOPWATCH_CONVERSION_VALID TRUE; OS_THIS_AMOUNT 1.000000; OS_THIS_UNITS ticks ; OS_STOPWATCH_AMOUNT 50000.000000; OS_STOPWATCH_UNITS ticks; };
	};



	/**************************** resources *********************************/

	/* resource for cooperative tasks */
	RESOURCE INTERNAL_COOP_RES {
		 RESOURCEPROPERTY = INTERNAL;
	};


	/**************************** static tasks *************************************/

	/* OSEK tasks */
	TASK osek_idle_task {
		SCHEDULE = FULL;
		ACTIVATION = 1;
		AUTOSTART = TRUE;
		//RTAOILCFG OS_USES_FP FALSE;
		//RTAOILCFG OS_TRACE FALSE;
	};

	/* ETAS internal tasks */
	TASK etasConfigTask {
		PRIORITY = 0;
		SCHEDULE = FULL;
		ACTIVATION = 2;
		AUTOSTART = FALSE;
		RESOURCE = INTERNAL_COOP_RES;
		//RTAOILCFG OS_USES_FP TRUE;
		//RTAOILCFG OS_TRACE FALSE;
	};

	TASK etasL1Task {
		PRIORITY = 1;
		SCHEDULE = FULL;
		ACTIVATION = 2;
		AUTOSTART = FALSE;
		RESOURCE = INTERNAL_COOP_RES;
		//RTAOILCFG OS_USES_FP TRUE;
		//RTAOILCFG OS_TRACE FALSE;
	};


	/******************** ISRs ***************************/

	/* ETAS internal ISRs (always present) */
	/* Priority and address should be configured via FW supplied file */
	/* These ISR should not be presented to the user */
	ISR etasTimerIsr {
		CATEGORY = 2;
		//RTAOILCFG PRIORITY = 10;
		//RTAOILCFG ADDRESS = 0x1;
		//RTAOILCFG OS_USES_FP FALSE;
		//RTAOILCFG OS_TRACE TRUE;
	};

	ISR etasL1Isr {
		 CATEGORY = 2;
		 //RTAOILCFG PRIORITY = 1;
		 //RTAOILCFG ADDRESS = 0x10;
		 //RTAOILCFG OS_USES_FP TRUE;
		 //RTAOILCFG OS_TRACE FALSE;
	};

	ISR etasStopOsIsr {
		 CATEGORY = 2;
		 //RTAOILCFG PRIORITY = 11;
		 //RTAOILCFG ADDRESS = 0x11; /* TODO: Check this! */
		 //RTAOILCFG OS_USES_FP FALSE;
		 //RTAOILCFG OS_TRACE FALSE;
	};

	/****************************** counter **********************************/

	/* ETAS internal counter used as base for ALARMS */
	COUNTER etasCounter {
		 MINCYCLE = 1;
		 MAXALLOWEDVALUE = 4294967295;
		 TICKSPERBASE = 1;
		 //RTAOILCFG OS_TIMEBASE ts_etasCounter;
		 //RTAOILCFG OS_SYNC FALSE;
		 //RTAOSEK OS_ACTIVATOR EtasCounter;
 	};
	//RTAOILCFG OS_ACTIVATOR EtasCounter { AUTOSTART FALSE; };
	//RTAOILCFG OS_ACTIVATOR EtasCounter { OS_MATURITY OS_ADVANCED; };
	//RTAOILCFG OS_ACTIVATOR EtasCounter { COUNTER etasCounter; };

	/****************************** alarms **********************************/

	COM RTACOM {
		 USEMESSAGERESOURCE = FALSE;
		 USEMESSAGESTATUS = FALSE;
	};

	/* RTA Trace configuration */
	//RTAOILCFG OS_TRACECLASS Tasks_and_ISRs 0 0;
	//RTAOILCFG OS_TRACECLASS Startup 0 0;
	//RTAOILCFG OS_TRACECLASS Activations 0 0;
	//RTAOILCFG OS_TRACECLASS Alarms 1 0;
	//RTAOILCFG OS_TRACECLASS Schedules 1 0;
	//RTAOILCFG OS_TRACECLASS Resources 1 0;
	//RTAOILCFG OS_TRACECLASS Interrupt_locks 0 0;
	//RTAOILCFG OS_TRACECLASS Errors 0 0;
	//RTAOILCFG OS_TRACECLASS Messages 1 0;
	//RTAOILCFG OS_TRACECLASS Message_Data 1 0;
	//RTAOILCFG OS_TRACECLASS Switching_overheads 1 0;
	//RTAOILCFG OS_TRACECLASS Events 1 0;
	//RTAOILCFG OS_TRACECLASS Tracepoints 1 0;
	//RTAOILCFG OS_TRACECLASS Task_Tracepoints 1 0;
	//RTAOILCFG OS_TRACECLASS Intervals 1 0;
	//RTAOILCFG OS_TRACECLASS Processes 1 0;

};

//RTAOILCFG OS_SETTING "AnalysisDepth" "9";
//RTAOILCFG OS_SETTING "AuxOIL" "1";
//RTAOILCFG OS_SETTING "AuxOIL0" "temp.oil";
/* RTA Trace configuration */
//RTAOILCFG OS_SETTING "MinPreempPrio" "0";
//RTAOILCFG OS_SETTING "TraceAuto" "1";
//RTAOILCFG OS_SETTING "TraceAutoComms" "true";
//RTAOILCFG OS_SETTING "TraceAutoRepeat" "false";
//RTAOILCFG OS_SETTING "TraceBufferSize" "100000";
//RTAOILCFG OS_SETTING "TraceCompactID" "false";
//RTAOILCFG OS_SETTING "TraceCompactTime" "false";
//RTAOILCFG OS_SETTING "TraceTgtStack" "true";
//RTAOILCFG OS_SETTING "TraceTgtTrigger" "true";
//RTAOILCFG OS_SETTING "TraceType" "0";
